;; Analyzed by ClojureScript 0.0-3195
{:use-macros {match cljs.core.match, go cljs.core.async.macros}, :excludes #{}, :name streak.core, :imports nil, :requires {vdom.elm vdom.elm, cljsjs.vdom cljsjs.vdom, cljsjs.d3 cljsjs.d3, cljs.core.match cljs.core.match, cljs.core.async cljs.core.async, async cljs.core.async}, :uses {chan cljs.core.async, foldp vdom.elm, render! vdom.elm, event vdom.elm}, :defs {step {:protocol-inline nil, :meta {:arglists (quote ([model action])), :end-column 11, :end-line 76, :column 7, :line 76, :file "/Users/exupero/code/streak/src/streak/core.cljs"}, :name streak.core/step, :variadic false, :file "src/streak/core.cljs", :end-column 11, :method-params ([model action]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([model action])), :test true}, ui {:protocol-inline nil, :meta {:arglists (quote ([actions])), :end-column 9, :end-line 38, :column 7, :line 38, :file "/Users/exupero/code/streak/src/streak/core.cljs"}, :name streak.core/ui, :variadic false, :file "src/streak/core.cljs", :end-column 9, :method-params ([actions]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([actions])), :test true}, spy {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 10, :end-line 37, :column 7, :line 37, :file "/Users/exupero/code/streak/src/streak/core.cljs"}, :name streak.core/spy, :variadic false, :file "src/streak/core.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, path {:protocol-inline nil, :meta {:arglists (quote ([ps])), :end-column 11, :end-line 34, :column 7, :line 34, :file "/Users/exupero/code/streak/src/streak/core.cljs"}, :name streak.core/path, :variadic false, :file "src/streak/core.cljs", :end-column 11, :method-params ([ps]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ps])), :test true}, scale {:protocol-inline nil, :meta {:arglists (quote ([ps x])), :end-column 12, :end-line 31, :column 7, :line 31, :file "/Users/exupero/code/streak/src/streak/core.cljs"}, :name streak.core/scale, :variadic false, :file "src/streak/core.cljs", :end-column 12, :method-params ([ps x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ps x])), :test true}, month-path {:protocol-inline nil, :meta {:arglists (quote ([t0])), :end-column 17, :end-line 15, :column 7, :line 15, :file "/Users/exupero/code/streak/src/streak/core.cljs"}, :name streak.core/month-path, :variadic false, :file "src/streak/core.cljs", :end-column 17, :method-params ([t0]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t0])), :test true}, month {:meta {:end-column 11, :end-line 13, :column 6, :line 13, :file "/Users/exupero/code/streak/src/streak/core.cljs"}, :file "src/streak/core.cljs", :line 13, :column 1, :end-line 13, :end-column 11, :test true, :name streak.core/month}, week {:meta {:end-column 10, :end-line 12, :column 6, :line 12, :file "/Users/exupero/code/streak/src/streak/core.cljs"}, :file "src/streak/core.cljs", :line 12, :column 1, :end-line 12, :end-column 10, :test true, :name streak.core/week}, day {:meta {:end-column 9, :end-line 11, :column 6, :line 11, :file "/Users/exupero/code/streak/src/streak/core.cljs"}, :file "src/streak/core.cljs", :line 11, :column 1, :end-line 11, :end-column 9, :test true, :name streak.core/day}}, :require-macros {cljs.core.match cljs.core.match, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:order [:year :div :id :a :href :onclick :download :className :previous-year :next-year :main :svg :width :height :g :transform :text :dy :text-anchor :rect :class :x :y :path :d :else :no-op], :seen #{:y :text-anchor :path :transform :else :width :onclick :dy :className :no-op :div :year :g :id :class :svg :d :x :main :download :rect :previous-year :href :next-year :a :height :text}}, :doc nil}